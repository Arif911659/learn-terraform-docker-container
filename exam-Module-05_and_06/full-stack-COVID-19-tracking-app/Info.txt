Create the following directory structure:
project/
├── docker-compose.yaml
├── backend/
│   ├── Dockerfile
│   ├── main.py
│   └── requirements.txt
├── frontend/
│   ├── Dockerfile
│   ├── package.json
│   └── src/
└── nginx/
    ├── nginx.conf
    └── conf.d/
=============================
Backend Setup:

# Create requirements.txt
echo "fastapi==0.68.0
uvicorn==0.15.0
sqlalchemy==1.4.23
pydantic==1.8.2
sqlite3" > requirements.txt

# Build backend Docker image
docker build -t covid-backend:latest -f Dockerfile .
========
Frontend Setup:

# Create new React app
npx create-react-app covid-frontend
cd covid-frontend

# Install dependencies
npm install axios

# Build frontend Docker image
docker build -t covid-frontend:latest -f Dockerfile .
======
Local Testing:

# Run backend
docker run -d -p 8000:8000 covid-backend:latest

# Run frontend
docker run -d -p 3000:3000 covid-frontend:latest

# Docker Stop all running containers
docker stop $(docker ps -q)
=====
Docker Compose Configuration for COVID-19 Application
# docker-compose.yml
version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: covid_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - covid_data:/app/data
    environment:
      - DATABASE_URL=sqlite:///data/covid.db
      - CORS_ORIGINS=http://localhost:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - covid_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: covid_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - covid_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: covid_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - frontend
      - backend
    networks:
      - covid_network
    restart: unless-stopped

volumes:
  covid_data:
    name: covid_data

networks:
  covid_network:
    name: covid_network
    driver: bridge
-----------
Start the services:
# Build and start all services
docker-compose up --build

# Run in detached mode
docker-compose up -d --build

# Stop and remove all services
docker-compose down

To interact with the services:

Frontend: http://localhost:3000
Backend API: http://localhost:8000
Nginx (production): http://localhost

# View logs
docker-compose logs -f

# Rebuild specific service
docker-compose up -d --build frontend

# Check service status
docker-compose ps


=====
Deploy to k3s:

# Apply Kubernetes manifests
kubectl apply -f backend-deployment.yaml
kubectl apply -f frontend-deployment.yaml

# Verify deployments
kubectl get pods
kubectl get services

=====
Access the application:


The frontend will be available at http://localhost:3000
The backend API will be at http://localhost:8000

Key Features:

Backend API with FastAPI supporting CRUD operations
React frontend with form for adding new cases and display of existing cases
SQLite database for data persistence
Kubernetes deployments with multiple replicas
Load balancer for frontend access
Service discovery between frontend and backend



